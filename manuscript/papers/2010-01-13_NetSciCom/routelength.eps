%!PS-Adobe-2.0 EPSF-2.0
%%Title: routelength.eps
%%Creator: gnuplot 4.2 patchlevel 5 
%%CreationDate: Fri Jan  8 18:10:25 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -73 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (routelength.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 5 )
  /Author (,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Jan  8 18:10:25 2010)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 220 scalefont setfont
1.000 UL
LTb
1254 440 M
63 0 V
5553 0 R
-63 0 V
stroke
1122 440 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0)]
] -73.3 MRshow
1.000 UL
LTb
1254 982 M
63 0 V
5553 0 R
-63 0 V
stroke
1122 982 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 1000)]
] -73.3 MRshow
1.000 UL
LTb
1254 1524 M
63 0 V
5553 0 R
-63 0 V
stroke
1122 1524 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 2000)]
] -73.3 MRshow
1.000 UL
LTb
1254 2066 M
63 0 V
5553 0 R
-63 0 V
stroke
1122 2066 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 3000)]
] -73.3 MRshow
1.000 UL
LTb
1254 2608 M
63 0 V
5553 0 R
-63 0 V
stroke
1122 2608 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 4000)]
] -73.3 MRshow
1.000 UL
LTb
1254 3150 M
63 0 V
5553 0 R
-63 0 V
stroke
1122 3150 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 5000)]
] -73.3 MRshow
1.000 UL
LTb
1254 3692 M
63 0 V
5553 0 R
-63 0 V
stroke
1122 3692 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 6000)]
] -73.3 MRshow
1.000 UL
LTb
1254 4234 M
63 0 V
5553 0 R
-63 0 V
stroke
1122 4234 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 7000)]
] -73.3 MRshow
1.000 UL
LTb
1254 4776 M
63 0 V
5553 0 R
-63 0 V
stroke
1122 4776 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 8000)]
] -73.3 MRshow
1.000 UL
LTb
1254 440 M
0 63 V
0 4273 R
0 -63 V
stroke
1254 220 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0)]
] -73.3 MCshow
1.000 UL
LTb
1816 440 M
0 63 V
0 4273 R
0 -63 V
stroke
1816 220 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 50)]
] -73.3 MCshow
1.000 UL
LTb
2377 440 M
0 63 V
0 4273 R
0 -63 V
stroke
2377 220 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 100)]
] -73.3 MCshow
1.000 UL
LTb
2939 440 M
0 63 V
0 4273 R
0 -63 V
stroke
2939 220 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 150)]
] -73.3 MCshow
1.000 UL
LTb
3500 440 M
0 63 V
0 4273 R
0 -63 V
stroke
3500 220 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 200)]
] -73.3 MCshow
1.000 UL
LTb
4062 440 M
0 63 V
0 4273 R
0 -63 V
stroke
4062 220 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 250)]
] -73.3 MCshow
1.000 UL
LTb
4624 440 M
0 63 V
0 4273 R
0 -63 V
stroke
4624 220 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 300)]
] -73.3 MCshow
1.000 UL
LTb
5185 440 M
0 63 V
0 4273 R
0 -63 V
stroke
5185 220 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 350)]
] -73.3 MCshow
1.000 UL
LTb
5747 440 M
0 63 V
0 4273 R
0 -63 V
stroke
5747 220 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 400)]
] -73.3 MCshow
1.000 UL
LTb
6308 440 M
0 63 V
0 4273 R
0 -63 V
stroke
6308 220 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 450)]
] -73.3 MCshow
1.000 UL
LTb
6870 440 M
0 63 V
0 4273 R
0 -63 V
stroke
6870 220 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 500)]
] -73.3 MCshow
1.000 UL
LTb
1.000 UL
LTb
1254 4776 N
0 -4336 V
5616 0 V
0 4336 V
-5616 0 V
Z stroke
1.000 UP
4624 2283 M
[ [(Helvetica) 280.0 0.0 true true 0 (350)]
] -93.3 MCshow
3.000 UL
LTb
5069 1098 M
83 -94 V
-24 123 V
-504 939 R
5152 1004 L
stroke
gsave [] 0 setdash
5069 1098 M
83 -94 V
-24 123 V
stroke
grestore
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
/Helvetica findfont 220 scalefont setfont
1254 442 Pls
1265 443 Pls
1276 444 Pls
1288 445 Pls
1299 446 Pls
1310 447 Pls
1321 448 Pls
1333 450 Pls
1344 450 Pls
1355 453 Pls
1366 454 Pls
1378 454 Pls
1389 456 Pls
1400 456 Pls
1422 458 Pls
1434 459 Pls
1445 460 Pls
1456 461 Pls
1467 462 Pls
1479 464 Pls
1490 465 Pls
1501 466 Pls
1512 467 Pls
1524 469 Pls
1535 471 Pls
1546 472 Pls
1557 473 Pls
1580 474 Pls
1591 474 Pls
1602 475 Pls
1636 476 Pls
1647 476 Pls
1703 477 Pls
1748 478 Pls
1782 479 Pls
1793 481 Pls
1804 482 Pls
1816 482 Pls
1827 483 Pls
1838 484 Pls
1849 484 Pls
1861 486 Pls
1872 487 Pls
1883 488 Pls
1894 489 Pls
1928 490 Pls
1939 491 Pls
1950 492 Pls
1962 495 Pls
1973 496 Pls
1984 497 Pls
1995 499 Pls
2007 500 Pls
2018 500 Pls
2029 501 Pls
2040 501 Pls
2051 503 Pls
2063 504 Pls
2085 505 Pls
2096 506 Pls
2119 507 Pls
2130 508 Pls
2164 511 Pls
2175 512 Pls
2209 513 Pls
2220 514 Pls
2231 514 Pls
2242 515 Pls
2254 516 Pls
2276 517 Pls
2299 519 Pls
2321 519 Pls
2344 521 Pls
2355 521 Pls
2366 522 Pls
2388 522 Pls
2400 523 Pls
2411 524 Pls
2422 526 Pls
2433 526 Pls
2445 527 Pls
2456 528 Pls
2467 529 Pls
2478 529 Pls
2490 530 Pls
2501 531 Pls
2523 532 Pls
2534 532 Pls
2546 533 Pls
2568 534 Pls
2579 536 Pls
2591 537 Pls
2602 538 Pls
2613 538 Pls
2624 540 Pls
2636 541 Pls
2647 542 Pls
2680 544 Pls
2692 544 Pls
2703 545 Pls
2714 546 Pls
2725 548 Pls
2737 550 Pls
2748 552 Pls
2770 554 Pls
2782 555 Pls
2793 556 Pls
2804 557 Pls
2815 558 Pls
2826 559 Pls
2838 560 Pls
2849 561 Pls
2860 561 Pls
2871 562 Pls
2905 565 Pls
2916 566 Pls
2928 567 Pls
2939 570 Pls
2950 572 Pls
2961 575 Pls
2972 578 Pls
2984 578 Pls
2995 579 Pls
3006 580 Pls
3017 581 Pls
3029 582 Pls
3040 584 Pls
3051 586 Pls
3062 587 Pls
3074 589 Pls
3085 590 Pls
3096 592 Pls
3107 594 Pls
3119 594 Pls
3130 596 Pls
3141 599 Pls
3152 599 Pls
3175 602 Pls
3186 602 Pls
3197 603 Pls
3208 604 Pls
3220 606 Pls
3242 606 Pls
3253 607 Pls
3265 608 Pls
3276 609 Pls
3287 610 Pls
3321 611 Pls
3332 612 Pls
3343 614 Pls
3354 616 Pls
3366 619 Pls
3377 622 Pls
3388 624 Pls
3399 625 Pls
3411 627 Pls
3422 628 Pls
3433 629 Pls
3444 631 Pls
3455 632 Pls
3467 633 Pls
3478 634 Pls
3489 635 Pls
3500 637 Pls
3512 639 Pls
3557 639 Pls
3568 640 Pls
3579 641 Pls
3590 643 Pls
3601 645 Pls
3613 645 Pls
3624 647 Pls
3635 648 Pls
3646 650 Pls
3658 652 Pls
3669 654 Pls
3680 654 Pls
3691 655 Pls
3703 657 Pls
3714 660 Pls
3725 662 Pls
3736 664 Pls
3748 665 Pls
3759 668 Pls
3770 669 Pls
3781 669 Pls
3792 670 Pls
3804 671 Pls
3815 676 Pls
3826 678 Pls
3837 680 Pls
3849 681 Pls
3860 682 Pls
3871 683 Pls
3882 684 Pls
3894 684 Pls
3905 686 Pls
3916 689 Pls
3927 691 Pls
3950 694 Pls
3961 696 Pls
3972 697 Pls
3983 699 Pls
3995 701 Pls
4006 703 Pls
4017 706 Pls
4028 707 Pls
4040 708 Pls
4051 709 Pls
4062 710 Pls
4073 713 Pls
4084 715 Pls
4096 716 Pls
4107 718 Pls
4118 719 Pls
4129 720 Pls
4141 722 Pls
4152 725 Pls
4163 728 Pls
4174 731 Pls
4186 735 Pls
4208 737 Pls
4219 739 Pls
4230 740 Pls
4242 742 Pls
4253 745 Pls
4264 746 Pls
4275 748 Pls
4287 751 Pls
4298 752 Pls
4309 753 Pls
4320 753 Pls
4332 754 Pls
4343 754 Pls
4354 755 Pls
4365 757 Pls
4376 758 Pls
4388 759 Pls
4399 760 Pls
4421 761 Pls
4433 761 Pls
4444 764 Pls
4455 765 Pls
4466 768 Pls
4478 769 Pls
4489 770 Pls
4500 773 Pls
4511 775 Pls
4523 779 Pls
4534 781 Pls
4545 785 Pls
4556 786 Pls
4567 788 Pls
4579 790 Pls
4590 790 Pls
4601 792 Pls
4612 793 Pls
4624 796 Pls
4635 799 Pls
4646 801 Pls
4657 805 Pls
4669 809 Pls
4680 812 Pls
4691 815 Pls
4702 818 Pls
4713 821 Pls
4725 825 Pls
4736 829 Pls
4747 834 Pls
4758 837 Pls
4770 841 Pls
4781 844 Pls
4792 845 Pls
4803 847 Pls
4815 851 Pls
4826 854 Pls
4837 856 Pls
4848 862 Pls
4859 864 Pls
4871 866 Pls
4882 870 Pls
4893 877 Pls
4904 879 Pls
4916 883 Pls
4927 887 Pls
4938 890 Pls
4949 894 Pls
4961 899 Pls
4972 901 Pls
4983 902 Pls
4994 909 Pls
5005 911 Pls
5017 913 Pls
5028 916 Pls
5039 920 Pls
5050 923 Pls
5062 929 Pls
5073 931 Pls
5084 935 Pls
5095 938 Pls
5107 945 Pls
5118 949 Pls
5129 954 Pls
5140 958 Pls
5152 961 Pls
5163 965 Pls
5174 971 Pls
5185 974 Pls
5196 977 Pls
5208 983 Pls
5219 987 Pls
5230 992 Pls
5241 994 Pls
5253 999 Pls
5264 1004 Pls
5275 1011 Pls
5286 1015 Pls
5298 1020 Pls
5309 1028 Pls
5320 1032 Pls
5331 1035 Pls
5342 1041 Pls
5354 1050 Pls
5365 1055 Pls
5376 1064 Pls
5387 1074 Pls
5399 1080 Pls
5410 1084 Pls
5421 1088 Pls
5432 1094 Pls
5444 1101 Pls
5455 1111 Pls
5466 1118 Pls
5477 1124 Pls
5488 1134 Pls
5500 1142 Pls
5511 1151 Pls
5522 1159 Pls
5533 1167 Pls
5545 1172 Pls
5556 1181 Pls
5567 1188 Pls
5578 1196 Pls
5590 1205 Pls
5601 1213 Pls
5612 1220 Pls
5623 1230 Pls
5634 1239 Pls
5646 1253 Pls
5657 1263 Pls
5668 1275 Pls
5679 1285 Pls
5691 1294 Pls
5702 1308 Pls
5713 1318 Pls
5724 1333 Pls
5736 1348 Pls
5747 1362 Pls
5758 1377 Pls
5769 1394 Pls
5780 1410 Pls
5792 1421 Pls
5803 1436 Pls
5814 1450 Pls
5825 1463 Pls
5837 1482 Pls
5848 1503 Pls
5859 1519 Pls
5870 1534 Pls
5882 1553 Pls
5893 1573 Pls
5904 1594 Pls
5915 1619 Pls
5927 1646 Pls
5938 1679 Pls
5949 1703 Pls
5960 1727 Pls
5971 1748 Pls
5983 1771 Pls
5994 1804 Pls
6005 1831 Pls
6016 1865 Pls
6028 1888 Pls
6039 1913 Pls
6050 1942 Pls
6061 1972 Pls
6073 2001 Pls
6084 2035 Pls
6095 2073 Pls
6106 2119 Pls
6117 2165 Pls
6129 2206 Pls
6140 2255 Pls
6151 2304 Pls
6162 2359 Pls
6174 2401 Pls
6185 2458 Pls
6196 2515 Pls
6207 2568 Pls
6219 2641 Pls
6230 2725 Pls
6241 2799 Pls
6252 2871 Pls
6263 2965 Pls
6275 3028 Pls
6286 3119 Pls
6297 3197 Pls
6308 3281 Pls
6320 3367 Pls
6331 3451 Pls
6342 3528 Pls
6353 3617 Pls
6365 3709 Pls
6376 3795 Pls
6387 3885 Pls
6398 3966 Pls
6409 4033 Pls
6421 4089 Pls
6432 4140 Pls
6443 4183 Pls
6454 4210 Pls
6466 4232 Pls
6477 4250 Pls
6488 4265 Pls
6499 4273 Pls
6511 4277 Pls
6533 4278 Pls
1.000 UL
LTb
1254 4776 N
0 -4336 V
5616 0 V
0 4336 V
-5616 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
