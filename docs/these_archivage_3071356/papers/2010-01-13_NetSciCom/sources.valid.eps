%!PS-Adobe-2.0 EPSF-2.0
%%Title: sources.valid.eps
%%Creator: gnuplot 4.2 patchlevel 5 
%%CreationDate: Fri Jan  8 17:51:27 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -73 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (sources.valid.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 5 )
  /Author (,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Jan  8 17:51:27 2010)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 220 scalefont setfont
1.000 UL
LTb
1122 440 M
63 0 V
5685 0 R
-63 0 V
stroke
990 440 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0)]
] -73.3 MRshow
1.000 UL
LTb
1122 1163 M
63 0 V
5685 0 R
-63 0 V
stroke
990 1163 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 100)]
] -73.3 MRshow
1.000 UL
LTb
1122 1885 M
63 0 V
5685 0 R
-63 0 V
stroke
990 1885 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 200)]
] -73.3 MRshow
1.000 UL
LTb
1122 2608 M
63 0 V
5685 0 R
-63 0 V
stroke
990 2608 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 300)]
] -73.3 MRshow
1.000 UL
LTb
1122 3331 M
63 0 V
5685 0 R
-63 0 V
stroke
990 3331 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 400)]
] -73.3 MRshow
1.000 UL
LTb
1122 4053 M
63 0 V
5685 0 R
-63 0 V
stroke
990 4053 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 500)]
] -73.3 MRshow
1.000 UL
LTb
1122 4776 M
63 0 V
5685 0 R
-63 0 V
stroke
990 4776 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 600)]
] -73.3 MRshow
1.000 UL
LTb
1122 440 M
0 63 V
0 4273 R
0 -63 V
stroke
1122 220 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0)]
] -73.3 MCshow
1.000 UL
LTb
1841 440 M
0 63 V
0 4273 R
0 -63 V
stroke
1841 220 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 10000)]
] -73.3 MCshow
1.000 UL
LTb
2559 440 M
0 63 V
0 4273 R
0 -63 V
stroke
2559 220 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 20000)]
] -73.3 MCshow
1.000 UL
LTb
3278 440 M
0 63 V
0 4273 R
0 -63 V
stroke
3278 220 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 30000)]
] -73.3 MCshow
1.000 UL
LTb
3996 440 M
0 63 V
0 4273 R
0 -63 V
stroke
3996 220 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 40000)]
] -73.3 MCshow
1.000 UL
LTb
4715 440 M
0 63 V
0 4273 R
0 -63 V
stroke
4715 220 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 50000)]
] -73.3 MCshow
1.000 UL
LTb
5433 440 M
0 63 V
0 4273 R
0 -63 V
stroke
5433 220 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 60000)]
] -73.3 MCshow
1.000 UL
LTb
6152 440 M
0 63 V
0 4273 R
0 -63 V
stroke
6152 220 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 70000)]
] -73.3 MCshow
1.000 UL
LTb
6870 440 M
0 63 V
0 4273 R
0 -63 V
stroke
6870 220 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 80000)]
] -73.3 MCshow
1.000 UL
LTb
1.000 UL
LTb
1122 4776 N
0 -4336 V
5748 0 V
0 4336 V
-5748 0 V
Z stroke
1.000 UP
5433 1885 M
[ [(Helvetica) 280.0 0.0 true true 0 (71783)]
] -93.3 MCshow
3.000 UL
LTb
6135 1022 M
113 -54 V
-71 104 V
-744 597 R
6248 968 L
stroke
gsave [] 0 setdash
6135 1022 M
113 -54 V
-71 104 V
stroke
grestore
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
1122 751 Pls
1123 758 Pls
1125 772 Pls
1125 780 Pls
1126 787 Pls
1278 794 Pls
1280 801 Pls
1280 809 Pls
1286 816 Pls
1749 823 Pls
1751 830 Pls
1801 837 Pls
2673 845 Pls
2968 852 Pls
2971 859 Pls
3695 866 Pls
3752 874 Pls
3898 881 Pls
3930 888 Pls
4193 895 Pls
5539 903 Pls
5745 910 Pls
5979 917 Pls
5990 924 Pls
6031 931 Pls
6280 939 Pls
6284 946 Pls
6285 953 Pls
6287 960 Pls
6288 968 Pls
6289 975 Pls
6290 982 Pls
6321 989 Pls
6324 996 Pls
6348 1004 Pls
6367 1011 Pls
6409 1018 Pls
6412 1025 Pls
6417 1033 Pls
6418 1040 Pls
6419 1047 Pls
6424 1054 Pls
6438 1061 Pls
6462 1069 Pls
6464 1076 Pls
6469 1083 Pls
6470 1090 Pls
6473 1098 Pls
6473 1105 Pls
6477 1112 Pls
6477 1119 Pls
6478 1127 Pls
6480 1134 Pls
6480 1141 Pls
6482 1148 Pls
6483 1155 Pls
6483 1163 Pls
6484 1170 Pls
6485 1184 Pls
6486 1192 Pls
6486 1199 Pls
6487 1206 Pls
6488 1213 Pls
6490 1220 Pls
6493 1228 Pls
6495 1235 Pls
6496 1242 Pls
6497 1249 Pls
6498 1257 Pls
6500 1264 Pls
6503 1271 Pls
6507 1278 Pls
6509 1286 Pls
6510 1293 Pls
6512 1300 Pls
6513 1307 Pls
6515 1314 Pls
6516 1322 Pls
6518 1329 Pls
6519 1336 Pls
6520 1343 Pls
6523 1351 Pls
6523 1358 Pls
6525 1365 Pls
6525 1372 Pls
6527 1379 Pls
6527 1387 Pls
6527 1394 Pls
6528 1401 Pls
6529 1408 Pls
6529 1423 Pls
6532 1430 Pls
6532 1437 Pls
6533 1445 Pls
6533 1452 Pls
6536 1459 Pls
6537 1466 Pls
6537 1473 Pls
6539 1481 Pls
6539 1488 Pls
6539 1495 Pls
6540 1502 Pls
6545 1510 Pls
6547 1517 Pls
6548 1524 Pls
6550 1531 Pls
6552 1538 Pls
6553 1546 Pls
6554 1553 Pls
6555 1560 Pls
6556 1567 Pls
6556 1575 Pls
6557 1582 Pls
6557 1589 Pls
6559 1596 Pls
6559 1603 Pls
6560 1611 Pls
6561 1618 Pls
6562 1625 Pls
6562 1632 Pls
6562 1647 Pls
6564 1654 Pls
6564 1661 Pls
6566 1669 Pls
6567 1676 Pls
6567 1683 Pls
6568 1690 Pls
6568 1697 Pls
6568 1705 Pls
6569 1712 Pls
6570 1719 Pls
6570 1726 Pls
6573 1734 Pls
6574 1741 Pls
6575 1748 Pls
6575 1755 Pls
6575 1770 Pls
6575 1777 Pls
6577 1784 Pls
6578 1791 Pls
6581 1799 Pls
6582 1806 Pls
6583 1813 Pls
6584 1820 Pls
6586 1828 Pls
6586 1835 Pls
6588 1842 Pls
6588 1849 Pls
6588 1856 Pls
6588 1864 Pls
6589 1871 Pls
6589 1878 Pls
6589 1885 Pls
6590 1893 Pls
6591 1900 Pls
6591 1914 Pls
6592 1929 Pls
6592 1936 Pls
6592 1943 Pls
6592 1950 Pls
6593 1958 Pls
6593 1965 Pls
6593 1972 Pls
6594 1979 Pls
6594 1987 Pls
6595 1994 Pls
6595 2001 Pls
6595 2008 Pls
6595 2015 Pls
6595 2023 Pls
6595 2030 Pls
6596 2037 Pls
6596 2044 Pls
6596 2052 Pls
6596 2059 Pls
6597 2066 Pls
6597 2073 Pls
6597 2080 Pls
6598 2088 Pls
6598 2095 Pls
6599 2102 Pls
6599 2109 Pls
6599 2117 Pls
6599 2124 Pls
6600 2131 Pls
6601 2138 Pls
6602 2145 Pls
6603 2160 Pls
6604 2167 Pls
6604 2174 Pls
6605 2182 Pls
6606 2189 Pls
6607 2196 Pls
6607 2203 Pls
6610 2211 Pls
6613 2218 Pls
6614 2225 Pls
6614 2232 Pls
6614 2239 Pls
6615 2247 Pls
6615 2254 Pls
6615 2261 Pls
6616 2268 Pls
6616 2276 Pls
6616 2283 Pls
6616 2290 Pls
6617 2297 Pls
6617 2304 Pls
6617 2312 Pls
6617 2319 Pls
6617 2326 Pls
6619 2333 Pls
6619 2348 Pls
6620 2355 Pls
6620 2362 Pls
6620 2370 Pls
6621 2377 Pls
6621 2384 Pls
6621 2391 Pls
6623 2398 Pls
6623 2413 Pls
6623 2420 Pls
6624 2427 Pls
6624 2435 Pls
6624 2449 Pls
6625 2456 Pls
6625 2463 Pls
6625 2471 Pls
6626 2478 Pls
6626 2492 Pls
6626 2507 Pls
6626 2514 Pls
6626 2521 Pls
6627 2529 Pls
6627 2536 Pls
6627 2543 Pls
6627 2550 Pls
6627 2557 Pls
6627 2565 Pls
6628 2579 Pls
6628 2586 Pls
6628 2594 Pls
6628 2601 Pls
6628 2608 Pls
6628 2615 Pls
6628 2622 Pls
6629 2637 Pls
6629 2644 Pls
6629 2651 Pls
6629 2659 Pls
6629 2666 Pls
6630 2673 Pls
6630 2687 Pls
6630 2695 Pls
6630 2702 Pls
6630 2709 Pls
6630 2724 Pls
6631 2731 Pls
6631 2738 Pls
6631 2745 Pls
6631 2753 Pls
6631 2760 Pls
6631 2774 Pls
6631 2781 Pls
6632 2789 Pls
6632 2796 Pls
6632 2810 Pls
6632 2818 Pls
6632 2825 Pls
6632 2839 Pls
6633 2846 Pls
6633 2854 Pls
6633 2868 Pls
6633 2883 Pls
6633 2890 Pls
6633 2897 Pls
6633 2904 Pls
6633 2919 Pls
6634 2926 Pls
6634 2933 Pls
6634 2940 Pls
6635 2948 Pls
6635 2969 Pls
6635 2977 Pls
6635 2984 Pls
6635 2991 Pls
6635 2998 Pls
6635 3013 Pls
6636 3027 Pls
6636 3034 Pls
6636 3042 Pls
6636 3056 Pls
6636 3063 Pls
6636 3071 Pls
6636 3078 Pls
6637 3085 Pls
6637 3092 Pls
6637 3099 Pls
6637 3107 Pls
6638 3121 Pls
6638 3128 Pls
6638 3136 Pls
6638 3143 Pls
6639 3150 Pls
6639 3164 Pls
6639 3186 Pls
6639 3201 Pls
6639 3208 Pls
6639 3215 Pls
6640 3222 Pls
6640 3229 Pls
6640 3237 Pls
6640 3244 Pls
6640 3251 Pls
6640 3258 Pls
6640 3266 Pls
6640 3273 Pls
6640 3280 Pls
6641 3287 Pls
6641 3302 Pls
6641 3331 Pls
6641 3338 Pls
6641 3352 Pls
6642 3360 Pls
6642 3367 Pls
6642 3374 Pls
6642 3381 Pls
6642 3388 Pls
6643 3403 Pls
6643 3410 Pls
6643 3417 Pls
6643 3432 Pls
6643 3439 Pls
6643 3446 Pls
6644 3468 Pls
6644 3482 Pls
6644 3490 Pls
6644 3504 Pls
6644 3511 Pls
6644 3519 Pls
6644 3526 Pls
6645 3533 Pls
6645 3540 Pls
6645 3547 Pls
6645 3555 Pls
6645 3562 Pls
6645 3569 Pls
6645 3584 Pls
6645 3598 Pls
6646 3605 Pls
6646 3620 Pls
6646 3641 Pls
6646 3649 Pls
6646 3656 Pls
6646 3670 Pls
6646 3678 Pls
6646 3685 Pls
6646 3692 Pls
6647 3699 Pls
6647 3706 Pls
6647 3714 Pls
6648 3721 Pls
6648 3728 Pls
6648 3735 Pls
6649 3743 Pls
6649 3757 Pls
6650 3764 Pls
6650 3771 Pls
6650 3786 Pls
6650 3793 Pls
6650 3800 Pls
6650 3815 Pls
6651 3822 Pls
6651 3829 Pls
6652 3837 Pls
6652 3844 Pls
6652 3858 Pls
6652 3865 Pls
6653 3873 Pls
6653 3880 Pls
6653 3887 Pls
6653 3894 Pls
6653 3909 Pls
6654 3916 Pls
6654 3930 Pls
6654 3938 Pls
6654 3945 Pls
6655 3952 Pls
6655 3959 Pls
6656 3967 Pls
6656 3974 Pls
6656 3996 Pls
6657 4003 Pls
6657 4010 Pls
6657 4017 Pls
6657 4024 Pls
6657 4032 Pls
6658 4039 Pls
6658 4046 Pls
6658 4053 Pls
6658 4061 Pls
6659 4068 Pls
6659 4075 Pls
6660 4082 Pls
6660 4089 Pls
6661 4104 Pls
6661 4111 Pls
6661 4118 Pls
6661 4126 Pls
6661 4133 Pls
6662 4140 Pls
6662 4155 Pls
6662 4162 Pls
6662 4169 Pls
6663 4183 Pls
6663 4191 Pls
6664 4198 Pls
6664 4205 Pls
6665 4212 Pls
6666 4220 Pls
6667 4227 Pls
6667 4234 Pls
6667 4241 Pls
6668 4248 Pls
6668 4263 Pls
6669 4270 Pls
6669 4285 Pls
6671 4299 Pls
6673 4306 Pls
6673 4328 Pls
6675 4335 Pls
6675 4342 Pls
6677 4350 Pls
6677 4357 Pls
6677 4364 Pls
6677 4371 Pls
1.000 UL
LTb
1122 4776 N
0 -4336 V
5748 0 V
0 4336 V
-5748 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
